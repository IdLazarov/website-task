@charset "UTF-8";
@font-face {
  font-family: myFirstLogoFont;
  src: url(../devwp/src/font/GROBOLD.ttf);
}

html body {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  margin-right: auto;
  margin-left: auto;
  max-width: 1280px;
}

html body .row {
  margin: 0;
}

html body header {
  background-color: #222e2e;
  color: white;
}

html body header .padding-10 {
  padding: 0;
}

html body header .padding-0 {
  padding: 0;
}

@media screen and (min-width: 768px) {
  html body header .padding-10 {
    padding: 0 0 0 10px;
  }
}

html body header .btn {
  margin-top: 20px;
  margin-bottom: 30px;
  background-color: #008B8B;
  padding: 0;
  border: 0;
  border-radius: 0;
  font-style: bold;
  text-align: center;
}

html body header .btn a {
  padding: 0 16px 0 16px;
  margin: 0;
  font-size: 26px;
}

html body header #logo-nav {
  font-family: myFirstLogoFont;
  text-transform: uppercase;
  text-align: center;
  color: white;
}

html body main {
  position: relative;
}

@media screen and (max-width: 768px) {
  html body main .secondary-logo {
    display: none;
  }
}

html body main .secondary-logo {
  position: absolute;
  left: -65px;
  top: -40px;
}

html body main .secondary-logo a {
  background-color: #008B8B;
  padding-top: 4px;
  padding-bottom: 8px;
  padding-left: 2px;
  padding-right: 2px;
  -webkit-writing-mode: vertical-rl;
      -ms-writing-mode: tb-rl;
          writing-mode: vertical-rl;
  -webkit-text-orientation: upright;
          text-orientation: upright;
  font-family: myFirstLogoFont;
  text-transform: uppercase;
  color: white;
  font-size: 1.40rem;
  letter-spacing: -6px;
}

html body main .secondary-logo a:hover {
  text-decoration: none;
}

html body main .social-media-share a {
  margin: 4px;
  font-size: 38px;
  color: white;
}

html body main .social-media-share a:hover {
  text-decoration: none;
}

html body main #info-col, html body main #action-col {
  color: white;
  border: solid;
  border-width: 10px;
}

html body main #info-col {
  background-color: #222e2e;
  border-color: #008B8B;
}

html body main #action-col {
  padding-top: 20px;
  padding-bottom: 20px;
  background-color: #222e2e;
  border-color: #008B8B;
}

html body main #action-col .swiper-container {
  width: 100%;
  height: 100%;
}

html body main #action-col .swiper-slide {
  text-align: center;
  font-size: 18px;
  background: url("https://images.unsplash.com/photo-1511193311914-0346f16efe90?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1353&q=80");
  height: 200px;
  background-position: center;
  background-size: cover;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

html body main #action-col .swiper-pagination-bullet-active {
  background-color: white;
}

html body footer {
  margin-bottom: 10px;
  padding: 20px;
  display: block;
  background-color: #008B8B;
  color: white;
  -ms-flex-line-pack: center;
      align-content: center;
}

html body footer p {
  margin: 0;
}

nav ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

nav ul li {
  float: left;
  position: relative;
}

@media screen and (min-width: 768px) {
  nav ul li {
    margin-right: 2px;
  }
}

nav ul li a {
  display: block;
  margin-right: 0px;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 16px;
  padding-right: 16px;
  color: white;
  text-decoration: none;
  background-color: #008B8B;
}

nav ul li a:hover {
  text-decoration: none;
  color: white;
}

nav ul li a:not(:only-child):after {
  padding-left: 4px;
  content: ' ▾';
}

nav ul li ul li {
  position: relative;
}

nav ul li ul li a {
  min-width: 190px;
}

nav ul li ul li a:after {
  content: "";
  display: block;
  height: 1px;
  width: 100%;
  background-color: white;
}

.nav-dropdown {
  position: absolute;
  z-index: 1;
  /* Guarantees that the dropdown will display on top of any content. */
  -webkit-box-shadow: 0 3px 12px rgba(0, 0, 0, 0.15);
          box-shadow: 0 3px 12px rgba(0, 0, 0, 0.15);
  display: none;
}

.nav-mobile {
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  background: #fff;
  height: 50px;
  width: 50px;
}

@media only screen and (max-width: 768px) {
  .nav-mobile {
    display: block;
  }
  nav {
    width: 100%;
    padding: 50px 0 0px;
  }
  nav ul {
    display: none;
  }
  nav ul li {
    float: none;
  }
  nav ul li a {
    padding: 12px;
  }
}

#nav-toggle {
  position: absolute;
  left: 9px;
  top: 15px;
  cursor: pointer;
  padding: 10px 35px 16px 0px;
}

#nav-toggle span,
#nav-toggle span:before,
#nav-toggle span:after {
  cursor: pointer;
  border-radius: 1px;
  height: 5px;
  width: 35px;
  background: #463f3f;
  position: absolute;
  display: block;
  content: '';
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

#nav-toggle span:before {
  top: -10px;
}

#nav-toggle span:after {
  bottom: -10px;
}

#nav-toggle.active span {
  background-color: transparent;
}

#nav-toggle.active span:before, #nav-toggle.active span:after {
  top: 0;
}

#nav-toggle.active span:before {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

#nav-toggle.active span:after {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

@media screen and (min-width: 768px) {
  .nav-list {
    display: block !important;
  }
}

/* 
  .navigation – the outer wrapper for the navbar. Specifies the height and color, and will stretch the full width of the viewport.
  */
.navigation {
  min-height: 70px;
  background: #222e2e;
}

/*
  .nav-container – the inner wrapper for the navbar. Defines how far the actual content should stretch.
  */
.nav-container {
  margin: 0 auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
